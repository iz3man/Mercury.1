[respond]
[include chopper_tune.cfg]
#[include cartographer.cfg]
[include ebb36.cfg]
[include shell_command.cfg]
[include mainsail.cfg]
#[include klicky-probe.cfg]
[include macro_rename.cfg]
[include macros.cfg]
[include tmc_autotune.cfg]
[include KAMP_Settings.cfg]
#[include K-ShakeTune/*.cfg]
[include calibrate.cfg]
[include backup.cfg]

[save_variables]
filename: /home/pi/printer_data/config/variables.cfg

[auto_speed]

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 1000
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[scanner]
canbus_uuid: 3f73f5294bf3            # adjust to suit your scanner, if using usb change to serial.
#    serial: /dev/serial/by-id/usb-cartographer_cartographer_
x_offset: 0                          # adjust for your cartographers offset from nozzle to middle of coil
y_offset: 21.1                       # adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.05916               # Backlash compensation distance for removing Z backlash before measuring the sensor response.
calibration_method: touch            # leave this as touch unless you want to use scan only for everything. 
sensor: cartographer                 # this must be set as cartographer unless using IDM etc.
sensor_alt: carto                    # alternate name to call commands. CARTO_TOUCH etc
mesh_runs: 2                         # Number of passes to make during mesh scan.

[idle_timeout]
timeout: 1800                        # Idle time (in seconds) to wait before running the above G-Code

[bed_mesh]
zero_reference_position: 112, 112    # set this to the middle of your bed
speed: 300                           # movement speed of toolhead during bed mesh
horizontal_move_z: 5                 # height of scanner during bed mesh scan
mesh_min: 10,10 
mesh_max: 200,200 
probe_count: 30,30
algorithm: bicubic

[lis2dw]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points: 125, 125, 20

[axis_twist_compensation]
speed: 200
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
calibrate_start_x: 20
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position. This parameter must be provided.
calibrate_end_x: 200
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position. This parameter must be provided.
calibrate_y: 110
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter must be provided and is recommended to
#   be near the center of the bed

[skew_correction] 

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_sam4e8e_003230533750414D3137303535303439-if00
serial: /dev/serial/by-id/usb-Klipper_rp2040_4550357128952208-if00

[gcode_arcs]
resolution: 0.1

[exclude_object]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT


[stepper_x]
# stepper B links
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12
microsteps: 64
#microsteps: 128
full_steps_per_rotation: 200
rotation_distance: 40
endstop_pin: EBB36: PB5
#endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_speed: 120
homing_retract_dist: 0
position_endstop: 230
position_max: 230
position_min: -30

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.8
stealthchop_threshold: 0
#hold_current: 0.6
#stealthchop_threshold: 999999
diag_pin: ^gpio4
driver_SGTHRS: 100

[stepper_y]
# stepper A rechts
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7
microsteps: 64
#microsteps: 128
full_steps_per_rotation: 200
rotation_distance: 40
homing_speed: 80
homing_retract_dist: 0
endstop_pin: gpio3
# tmc2209_stepper_y:virtual_endstop
position_endstop: 245
position_max: 245
position_min: -25

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.8
stealthchop_threshold: 0
#hold_current: 0.6
#stealthchop_threshold: 999999
diag_pin: ^gpio3
driver_SGTHRS: 150

[stepper_z]
# rechts
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0
position_max: 200
position_min: -2
homing_speed: 15

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.6
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z1]
# links
step_pin: gpio14
dir_pin: gpio13
enable_pin: !gpio15
microsteps: 16
rotation_distance: 4

[tmc2209 stepper_z1]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.6
hold_current: 0.500
stealthchop_threshold: 999999

[z_tilt]
z_positions:
  275,110  # rechts
  -55,110 # links
points:
   10,115
   210,115
speed: 200
horizontal_move_z: 5
retries: 3
retry_tolerance: 0.01

# [probe]
# pin: EBBCan:PB6
# x_offset: 0
# y_offset: 32
# speed: 5
# samples: 3
# samples_result: median
# sample_retract_dist: 2
# samples_tolerance: 0.01
# samples_tolerance_retries: 5

[safe_z_home]
home_xy_position: 110,110
z_hop: 5

#[bed_mesh]
#speed: 300
#horizontal_move_z: 5
#mesh_min: 10,10 
#mesh_max: 200, 200 
#probe_count: 10, 10
#algorithm: bicubic

[heater_bed]
heater_pin: gpio21
pwm_cycle_time: 0.02
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26
min_temp: 0
max_temp: 130
control = pid
pid_kp = 53.887
pid_ki = 2.548
pid_kd = 284.925

[controller_fan fet_cooling]
pin: gpio17
max_power: 1.0
fan_speed: 1
cycle_time: 0.01
kick_start_time: 0
stepper: stepper_x

[fan_generic filter]
pin: gpio20
cycle_time: 0.01
hardware_pwm: false

#[fan_generic controller_fan]
#pin: gpio17

[printer]
kinematics: corexy
max_velocity: 700
max_accel: 10000
max_z_velocity: 15
max_z_accel: 30

[screws_tilt_adjust]
screw1: 36, -18
screw1_name: front left screw

screw2: 206, -18
screw2_name: front right screw

screw3: 206, 150
screw3_name: rear right screw

screw4: 36, 150
screw4_name: rear left screw
horizontal_move_z: 5
speed: 200
screw_thread: CW-M4

[temperature_sensor pico]
sensor_type: temperature_mcu

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [scanner model default]
#*# model_coef = 1.3493498202903655,
#*# 	1.7866262163593043,
#*# 	0.761752794255524,
#*# 	0.08608737855767203,
#*# 	0.4635713859037924,
#*# 	1.5264760904773342,
#*# 	-0.5105263801603798,
#*# 	-2.065766250005725,
#*# 	0.48322072939840416,
#*# 	1.1155337136499237
#*# model_domain = 3.1839359823232537e-07,3.347973369217271e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 24.926280
#*# model_offset = 0.00000
#*#
#*# [scanner]
#*# scanner_touch_threshold = 4000
#*# scanner_touch_z_offset = 0.200
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.060981, 0.059210, 0.051749, 0.041111, 0.033088, 0.023687, 0.013390, 0.005912, -0.002016, -0.010725, -0.017466, -0.022985, -0.028342, -0.029284, -0.031987, -0.032875, -0.038284, -0.043212, -0.045922, -0.047754, -0.051322, -0.051943, -0.053837, -0.053179, -0.047499, -0.039995, -0.038949, -0.025564, -0.013757, -0.007289
#*# 	  0.059481, 0.057609, 0.048668, 0.040662, 0.032621, 0.020136, 0.016835, 0.005502, 0.001982, -0.008024, -0.012736, -0.020406, -0.021754, -0.025781, -0.026536, -0.030029, -0.035066, -0.039953, -0.041271, -0.041891, -0.044147, -0.047838, -0.048345, -0.047026, -0.041884, -0.032566, -0.026200, -0.019014, -0.009070, -0.002053
#*# 	  0.054091, 0.052953, 0.045237, 0.037623, 0.030366, 0.021966, 0.013647, 0.009936, 0.002406, -0.005226, -0.011094, -0.015327, -0.020054, -0.023692, -0.026333, -0.029370, -0.035351, -0.038365, -0.038308, -0.038945, -0.041952, -0.045262, -0.046375, -0.042640, -0.038455, -0.027982, -0.022640, -0.018159, -0.007658, 0.001584
#*# 	  0.047114, 0.041563, 0.038542, 0.030632, 0.026944, 0.017412, 0.015399, 0.006180, 0.004171, -0.006870, -0.009341, -0.018710, -0.019267, -0.023155, -0.025754, -0.031161, -0.037321, -0.042429, -0.041906, -0.035984, -0.041209, -0.043720, -0.044455, -0.041783, -0.037878, -0.032227, -0.024570, -0.017119, -0.009417, 0.000993
#*# 	  0.040841, 0.040285, 0.033888, 0.028742, 0.022624, 0.016994, 0.012292, 0.008000, 0.001193, -0.006170, -0.011161, -0.014146, -0.017314, -0.018321, -0.021627, -0.028268, -0.037474, -0.042451, -0.041934, -0.039634, -0.039450, -0.043393, -0.043364, -0.041268, -0.038401, -0.030010, -0.024420, -0.014730, -0.007053, 0.004351
#*# 	  0.041245, 0.040427, 0.033683, 0.028522, 0.023098, 0.017416, 0.014147, 0.006768, 0.004178, -0.005117, -0.005467, -0.008271, -0.012389, -0.012578, -0.019277, -0.027954, -0.033898, -0.038596, -0.035376, -0.036288, -0.038284, -0.038717, -0.037111, -0.034961, -0.030855, -0.025440, -0.017055, -0.009977, -0.001962, 0.008144
#*# 	  0.043430, 0.044042, 0.037398, 0.033782, 0.028965, 0.024076, 0.019250, 0.014883, 0.011410, 0.007166, 0.001101, 0.001689, -0.012032, -0.009745, -0.012165, -0.021697, -0.027674, -0.032232, -0.032216, -0.031989, -0.031405, -0.030735, -0.029119, -0.028123, -0.024623, -0.019062, -0.012063, -0.004808, 0.005860, 0.015987
#*# 	  0.048008, 0.044459, 0.041249, 0.034783, 0.032242, 0.029230, 0.028605, 0.023738, 0.020305, 0.015075, 0.007067, 0.005287, -0.002733, -0.007046, -0.009947, -0.017148, -0.022481, -0.026025, -0.026560, -0.026884, -0.025155, -0.024823, -0.023879, -0.021106, -0.017697, -0.011928, -0.005477, 0.000106, 0.007767, 0.019200
#*# 	  0.050104, 0.043153, 0.039041, 0.036150, 0.033644, 0.028777, 0.032362, 0.022198, 0.020469, 0.018549, 0.008734, 0.004314, -0.004546, -0.010458, -0.012828, -0.014752, -0.019619, -0.023492, -0.025184, -0.025146, -0.023617, -0.021938, -0.020788, -0.017060, -0.012699, -0.006597, -0.000755, 0.004310, 0.012051, 0.023348
#*# 	  0.051856, 0.042876, 0.038664, 0.033968, 0.032045, 0.031425, 0.029218, 0.026151, 0.020066, 0.015795, 0.004426, -0.001582, -0.007783, -0.011900, -0.014469, -0.017370, -0.022107, -0.026146, -0.027454, -0.026914, -0.024743, -0.021653, -0.018429, -0.012900, -0.007620, -0.002078, 0.002426, 0.007287, 0.013973, 0.023253
#*# 	  0.052425, 0.044503, 0.039753, 0.036665, 0.033763, 0.033283, 0.031757, 0.028855, 0.020674, 0.013608, 0.004276, -0.001347, -0.006683, -0.011069, -0.014334, -0.015718, -0.022123, -0.027098, -0.027247, -0.025094, -0.022253, -0.019111, -0.015461, -0.010410, -0.005322, 0.001847, 0.006967, 0.012369, 0.019069, 0.028015
#*# 	  0.062843, 0.054071, 0.050018, 0.044275, 0.041705, 0.038091, 0.035824, 0.031312, 0.025000, 0.018165, 0.011564, 0.005664, -0.001079, -0.006429, -0.008899, -0.011034, -0.016209, -0.020784, -0.020359, -0.017752, -0.015133, -0.009799, -0.006300, -0.000176, 0.005002, 0.012607, 0.018153, 0.022837, 0.029908, 0.036969
#*# 	  0.073402, 0.066637, 0.060410, 0.055733, 0.051223, 0.047691, 0.043563, 0.039082, 0.033194, 0.026081, 0.020325, 0.013569, 0.007013, 0.001973, -0.000962, -0.001743, -0.006989, -0.011570, -0.011464, -0.008726, -0.006059, -0.000948, 0.002726, 0.008259, 0.014370, 0.021887, 0.028073, 0.034253, 0.041538, 0.048632
#*# 	  0.079975, 0.072391, 0.066763, 0.061727, 0.057564, 0.054340, 0.050452, 0.044646, 0.038044, 0.030759, 0.025253, 0.018393, 0.012500, 0.007929, 0.006669, 0.006095, 0.000392, -0.004664, -0.006248, -0.002832, -0.000518, 0.003313, 0.008171, 0.013869, 0.020265, 0.027574, 0.036356, 0.042144, 0.049602, 0.058061
#*# 	  0.078532, 0.069576, 0.062162, 0.058377, 0.054631, 0.050643, 0.047043, 0.042486, 0.037173, 0.030399, 0.022726, 0.017050, 0.011093, 0.008160, 0.006714, 0.005964, 0.001181, -0.003824, -0.005283, -0.003338, -0.000831, 0.004036, 0.009158, 0.014349, 0.021524, 0.028838, 0.037415, 0.043994, 0.052121, 0.059794
#*# 	  0.075711, 0.067539, 0.060804, 0.054954, 0.048990, 0.044522, 0.040031, 0.037513, 0.032264, 0.027163, 0.022310, 0.015306, 0.009295, 0.005867, 0.004376, 0.004447, -0.000492, -0.004082, -0.005186, -0.003806, -0.000711, 0.004591, 0.009142, 0.015079, 0.021963, 0.029929, 0.038434, 0.044603, 0.051232, 0.059244
#*# 	  0.073073, 0.065368, 0.058044, 0.052371, 0.046936, 0.041640, 0.036578, 0.032248, 0.029406, 0.024524, 0.019517, 0.013852, 0.008631, 0.004157, 0.002579, 0.001855, -0.001685, -0.005345, -0.006252, -0.003694, -0.001218, 0.002403, 0.008224, 0.014265, 0.021382, 0.029097, 0.038345, 0.045311, 0.052929, 0.060310
#*# 	  0.073185, 0.065782, 0.059646, 0.053700, 0.048208, 0.042830, 0.038246, 0.034166, 0.029812, 0.025356, 0.020463, 0.015058, 0.008069, 0.004616, 0.003511, 0.003361, 0.000600, -0.002419, -0.003756, -0.002403, 0.000690, 0.005599, 0.011406, 0.019682, 0.026617, 0.035428, 0.043219, 0.049689, 0.057785, 0.063652
#*# 	  0.078516, 0.069343, 0.063355, 0.059170, 0.055582, 0.049410, 0.044835, 0.039626, 0.035619, 0.030590, 0.026693, 0.020992, 0.016042, 0.012876, 0.012559, 0.011849, 0.008523, 0.005773, 0.004683, 0.006119, 0.008501, 0.014083, 0.021382, 0.029090, 0.036471, 0.044876, 0.052684, 0.059019, 0.066074, 0.073629
#*# 	  0.085841, 0.076854, 0.070679, 0.065575, 0.060652, 0.055658, 0.050194, 0.046490, 0.042254, 0.037398, 0.032781, 0.028579, 0.023055, 0.021140, 0.020152, 0.020447, 0.017052, 0.013816, 0.013819, 0.014032, 0.017210, 0.023226, 0.028480, 0.036204, 0.043247, 0.050848, 0.058728, 0.064682, 0.072946, 0.078815
#*# 	  0.091115, 0.081775, 0.074524, 0.069149, 0.064381, 0.058291, 0.052689, 0.048277, 0.045156, 0.041191, 0.036341, 0.032864, 0.028462, 0.026144, 0.025072, 0.023793, 0.020323, 0.017536, 0.017578, 0.019058, 0.020384, 0.024761, 0.030676, 0.036899, 0.043762, 0.051272, 0.059120, 0.064718, 0.072205, 0.079748
#*# 	  0.091920, 0.084882, 0.080360, 0.073734, 0.068328, 0.061757, 0.056168, 0.051558, 0.047243, 0.042862, 0.038797, 0.035379, 0.031301, 0.028499, 0.027608, 0.027674, 0.025246, 0.021485, 0.021420, 0.022146, 0.024730, 0.027721, 0.032174, 0.037733, 0.044886, 0.052556, 0.059079, 0.064957, 0.072098, 0.078710
#*# 	  0.094232, 0.091519, 0.085200, 0.080214, 0.073513, 0.067374, 0.060447, 0.054644, 0.050433, 0.045500, 0.041170, 0.037403, 0.034572, 0.032097, 0.030448, 0.030913, 0.027997, 0.024370, 0.025255, 0.027288, 0.029415, 0.031565, 0.035329, 0.041243, 0.047405, 0.054692, 0.062298, 0.067686, 0.074727, 0.081344
#*# 	  0.100425, 0.099085, 0.094828, 0.089602, 0.082502, 0.074037, 0.067057, 0.061349, 0.055784, 0.050171, 0.046854, 0.043515, 0.039865, 0.038343, 0.036861, 0.037005, 0.034191, 0.031243, 0.029733, 0.030578, 0.032175, 0.035719, 0.040523, 0.045299, 0.052137, 0.058870, 0.066088, 0.071520, 0.079905, 0.086882
#*# 	  0.106820, 0.106245, 0.100063, 0.095312, 0.088612, 0.082281, 0.074002, 0.067072, 0.062256, 0.057855, 0.052993, 0.051089, 0.047678, 0.046029, 0.044343, 0.043839, 0.039973, 0.036340, 0.035543, 0.036266, 0.038481, 0.040945, 0.045132, 0.050249, 0.056720, 0.064053, 0.071871, 0.079045, 0.085802, 0.093327
#*# 	  0.112840, 0.110680, 0.104779, 0.099511, 0.093748, 0.086871, 0.080116, 0.074131, 0.067562, 0.062625, 0.058191, 0.054566, 0.051368, 0.049453, 0.048611, 0.048392, 0.045300, 0.041591, 0.040271, 0.040836, 0.041520, 0.044016, 0.047735, 0.053052, 0.058765, 0.066308, 0.072274, 0.078688, 0.088454, 0.094126
#*# 	  0.112021, 0.110873, 0.102658, 0.095566, 0.090658, 0.084237, 0.076981, 0.070805, 0.064881, 0.059756, 0.055146, 0.051753, 0.048532, 0.047341, 0.045691, 0.045509, 0.042800, 0.039042, 0.037397, 0.036911, 0.037809, 0.040085, 0.043608, 0.048933, 0.053328, 0.059464, 0.067769, 0.073144, 0.080830, 0.088611
#*# 	  0.109543, 0.107405, 0.099830, 0.091851, 0.084199, 0.077441, 0.070526, 0.062546, 0.057160, 0.052770, 0.048831, 0.044403, 0.040955, 0.040093, 0.038473, 0.039515, 0.036166, 0.033672, 0.031661, 0.030431, 0.031968, 0.034296, 0.037556, 0.040832, 0.046221, 0.052059, 0.058308, 0.064860, 0.073700, 0.081513
#*# 	  0.104153, 0.103850, 0.095661, 0.087769, 0.079840, 0.073334, 0.064195, 0.056408, 0.050338, 0.046814, 0.041957, 0.038863, 0.036966, 0.035488, 0.033800, 0.032799, 0.030745, 0.027719, 0.025707, 0.025110, 0.026583, 0.029408, 0.032299, 0.034468, 0.039376, 0.044791, 0.052700, 0.058254, 0.066708, 0.076618
#*# 	  0.110472, 0.107040, 0.098008, 0.089936, 0.080122, 0.070957, 0.063278, 0.055474, 0.049622, 0.046213, 0.041561, 0.036732, 0.035745, 0.034405, 0.033635, 0.033289, 0.030806, 0.028332, 0.026762, 0.026266, 0.026034, 0.028876, 0.029937, 0.031790, 0.036155, 0.042421, 0.048930, 0.056774, 0.067454, 0.075996
#*# x_count = 30
#*# y_count = 30
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 200.0
#*# min_y = 10.0
#*# max_y = 200.0
#*#
#*# [axis_twist_compensation]
#*# z_compensations = -0.013931, 0.023180, -0.009249
#*# compensation_start_x = 20.0
#*# compensation_end_x = 200.0
