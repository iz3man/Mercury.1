[respond]
[include chopper_tune.cfg]
#[include cartographer.cfg]
[include ebb36.cfg]
[include shell_command.cfg]
[include mainsail.cfg]
#[include klicky-probe.cfg]
[include macro_rename.cfg]
[include macros.cfg]
[include tmc_autotune.cfg]
[include KAMP_Settings.cfg]
#[include K-ShakeTune/*.cfg]
[include calibrate.cfg]
[include backup.cfg]

[save_variables]
filename: /home/pi/printer_data/config/variables.cfg

[auto_speed]

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 1000
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[scanner]
canbus_uuid: 3f73f5294bf3            # adjust to suit your scanner, if using usb change to serial.
#    serial: /dev/serial/by-id/usb-cartographer_cartographer_
x_offset: 0                          # adjust for your cartographers offset from nozzle to middle of coil
y_offset: 21.1                       # adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.05916               # Backlash compensation distance for removing Z backlash before measuring the sensor response.
calibration_method: touch            # leave this as touch unless you want to use scan only for everything. 
sensor: cartographer                 # this must be set as cartographer unless using IDM etc.
sensor_alt: carto                    # alternate name to call commands. CARTO_TOUCH etc
mesh_runs: 2                         # Number of passes to make during mesh scan.

[idle_timeout]
timeout: 1800                        # Idle time (in seconds) to wait before running the above G-Code

[bed_mesh]
zero_reference_position: 112, 112    # set this to the middle of your bed
speed: 300                           # movement speed of toolhead during bed mesh
horizontal_move_z: 5                 # height of scanner during bed mesh scan
mesh_min: 10,10 
mesh_max: 200,200 
probe_count: 30,30
algorithm: bicubic

[lis2dw]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points: 125, 125, 20

[axis_twist_compensation]
speed: 200
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
calibrate_start_x: 20
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position. This parameter must be provided.
calibrate_end_x: 200
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position. This parameter must be provided.
calibrate_y: 110
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter must be provided and is recommended to
#   be near the center of the bed

[skew_correction] 

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_sam4e8e_003230533750414D3137303535303439-if00
serial: /dev/serial/by-id/usb-Klipper_rp2040_4550357128952208-if00

[gcode_arcs]
resolution: 0.1

[exclude_object]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT


[stepper_x]
# stepper B links
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12
microsteps: 64
#microsteps: 128
full_steps_per_rotation: 200
rotation_distance: 40
endstop_pin: EBB36: PB5
#endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_speed: 120
homing_retract_dist: 0
position_endstop: 230
position_max: 230
position_min: -30

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.8
stealthchop_threshold: 0
#hold_current: 0.6
#stealthchop_threshold: 999999
diag_pin: ^gpio4
driver_SGTHRS: 100

[stepper_y]
# stepper A rechts
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7
microsteps: 64
#microsteps: 128
full_steps_per_rotation: 200
rotation_distance: 40
homing_speed: 80
homing_retract_dist: 0
endstop_pin: gpio3
# tmc2209_stepper_y:virtual_endstop
position_endstop: 245
position_max: 245
position_min: -25

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.8
stealthchop_threshold: 0
#hold_current: 0.6
#stealthchop_threshold: 999999
diag_pin: ^gpio3
driver_SGTHRS: 150

[stepper_z]
# rechts
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0
position_max: 200
position_min: -2
homing_speed: 15

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.6
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z1]
# links
step_pin: gpio14
dir_pin: gpio13
enable_pin: !gpio15
microsteps: 16
rotation_distance: 4

[tmc2209 stepper_z1]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.6
hold_current: 0.500
stealthchop_threshold: 999999

[z_tilt]
z_positions:
  275,110  # rechts
  -55,110 # links
points:
   10,115
   210,115
speed: 200
horizontal_move_z: 5
retries: 3
retry_tolerance: 0.01

# [probe]
# pin: EBBCan:PB6
# x_offset: 0
# y_offset: 32
# speed: 5
# samples: 3
# samples_result: median
# sample_retract_dist: 2
# samples_tolerance: 0.01
# samples_tolerance_retries: 5

[safe_z_home]
home_xy_position: 110,110
z_hop: 5

#[bed_mesh]
#speed: 300
#horizontal_move_z: 5
#mesh_min: 10,10 
#mesh_max: 200, 200 
#probe_count: 10, 10
#algorithm: bicubic

[heater_bed]
heater_pin: gpio21
pwm_cycle_time: 0.02
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26
min_temp: 0
max_temp: 130
control = pid
pid_kp = 53.887
pid_ki = 2.548
pid_kd = 284.925

[controller_fan fet_cooling]
pin: gpio17
max_power: 1.0
fan_speed: 1
cycle_time: 0.01
kick_start_time: 0
stepper: stepper_x

[fan_generic filter]
pin: gpio18
cycle_time: 0.01
hardware_pwm: false

#[fan_generic controller_fan]
#pin: gpio17

[printer]
kinematics: corexy
max_velocity: 700
max_accel: 10000
max_z_velocity: 15
max_z_accel: 30

[screws_tilt_adjust]
screw1: 36, -18
screw1_name: front left screw

screw2: 206, -18
screw2_name: front right screw

screw3: 206, 150
screw3_name: rear right screw

screw4: 36, 150
screw4_name: rear left screw
horizontal_move_z: 5
speed: 200
screw_thread: CW-M4

[temperature_sensor pico]
sensor_type: temperature_mcu

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [scanner model default]
#*# model_coef = 1.3493498202903655,
#*# 	1.7866262163593043,
#*# 	0.761752794255524,
#*# 	0.08608737855767203,
#*# 	0.4635713859037924,
#*# 	1.5264760904773342,
#*# 	-0.5105263801603798,
#*# 	-2.065766250005725,
#*# 	0.48322072939840416,
#*# 	1.1155337136499237
#*# model_domain = 3.1839359823232537e-07,3.347973369217271e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 24.926280
#*# model_offset = 0.00000
#*#
#*# [scanner]
#*# scanner_touch_threshold = 4000
#*# scanner_touch_z_offset = 0.120
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.109793, 0.096780, 0.083191, 0.071075, 0.059161, 0.051600, 0.044325, 0.031750, 0.032781, 0.027202, 0.016902, 0.013265, 0.009498, 0.012473, 0.012026, 0.014740, 0.019273, 0.024824, 0.032359, 0.042921, 0.055367, 0.070278, 0.086880
#*# 	  0.107746, 0.094057, 0.080789, 0.071093, 0.061339, 0.047399, 0.042625, 0.025054, 0.026549, 0.022856, 0.015065, 0.010388, 0.007921, 0.007760, 0.009175, 0.013781, 0.018047, 0.023426, 0.031364, 0.042020, 0.053394, 0.068028, 0.083720
#*# 	  0.105832, 0.094045, 0.079302, 0.069609, 0.058023, 0.043774, 0.036850, 0.029216, 0.022677, 0.018121, 0.012591, 0.008066, 0.005717, 0.006004, 0.008427, 0.012911, 0.017008, 0.022575, 0.032073, 0.040959, 0.053851, 0.067931, 0.083535
#*# 	  0.096286, 0.090070, 0.069822, 0.062332, 0.050641, 0.040409, 0.029594, 0.020621, 0.013654, 0.011148, 0.008073, 0.004389, 0.001263, 0.001773, 0.003726, 0.008006, 0.013435, 0.018859, 0.028221, 0.040120, 0.051834, 0.065135, 0.081217
#*# 	  0.095271, 0.082537, 0.070457, 0.055832, 0.045015, 0.031804, 0.022982, 0.015242, 0.010492, 0.006783, 0.004157, -0.001191, -0.004527, -0.004620, -0.001696, 0.002767, 0.009067, 0.016233, 0.026009, 0.038686, 0.051339, 0.065343, 0.079581
#*# 	  0.092361, 0.079378, 0.064808, 0.051231, 0.039163, 0.029697, 0.020860, 0.012689, 0.008027, 0.004434, 0.002025, -0.003646, -0.006344, -0.005700, -0.003237, 0.002055, 0.008426, 0.016220, 0.025756, 0.037901, 0.050513, 0.064048, 0.079762
#*# 	  0.092711, 0.079072, 0.065186, 0.051945, 0.041241, 0.031239, 0.023030, 0.014327, 0.009318, 0.007268, 0.005015, -0.002090, -0.004604, -0.003214, 0.000775, 0.005406, 0.012433, 0.019882, 0.030232, 0.043031, 0.056385, 0.071028, 0.086659
#*# 	  0.094468, 0.080888, 0.066552, 0.055443, 0.043857, 0.035059, 0.025691, 0.017137, 0.012730, 0.010602, 0.008880, 0.003601, 0.000789, 0.001414, 0.005085, 0.009250, 0.016710, 0.024561, 0.034407, 0.047227, 0.060670, 0.076004, 0.091864
#*# 	  0.095564, 0.082545, 0.068463, 0.055719, 0.043276, 0.034829, 0.025983, 0.018209, 0.015219, 0.013017, 0.011479, 0.005873, 0.002574, 0.002340, 0.006219, 0.012002, 0.017145, 0.026336, 0.035229, 0.048155, 0.060957, 0.078160, 0.093488
#*# 	  0.087823, 0.075071, 0.061894, 0.050722, 0.037948, 0.029078, 0.020262, 0.014014, 0.010903, 0.008794, 0.008064, 0.004245, 0.000755, 0.000563, 0.003484, 0.007360, 0.015758, 0.023507, 0.033704, 0.046221, 0.058890, 0.075137, 0.091669
#*# 	  0.079333, 0.067487, 0.055485, 0.044715, 0.033555, 0.024954, 0.016456, 0.010176, 0.005511, 0.003973, 0.003748, 0.000227, -0.001970, -0.001468, 0.001466, 0.005114, 0.011828, 0.020592, 0.031427, 0.043186, 0.057669, 0.072949, 0.087923
#*# 	  0.072021, 0.060422, 0.047461, 0.038126, 0.027402, 0.018938, 0.011296, 0.004324, 0.000963, -0.000918, -0.001220, -0.004083, -0.006198, -0.006297, -0.003736, 0.000316, 0.007622, 0.016976, 0.027413, 0.039917, 0.054017, 0.069419, 0.086478
#*# 	  0.074720, 0.061020, 0.048671, 0.038141, 0.027977, 0.019573, 0.010739, 0.002028, -0.001317, -0.002756, -0.000702, -0.004085, -0.006985, -0.007170, -0.005003, -0.001130, 0.007337, 0.017742, 0.030013, 0.042758, 0.057721, 0.074347, 0.090479
#*# 	  0.078535, 0.064763, 0.052046, 0.041621, 0.031774, 0.023588, 0.014369, 0.008491, 0.005228, 0.004481, 0.004018, 0.001738, -0.000942, -0.001830, 0.000502, 0.004381, 0.012245, 0.023728, 0.036243, 0.048973, 0.065472, 0.079863, 0.097022
#*# 	  0.084177, 0.070289, 0.058082, 0.047670, 0.036662, 0.028634, 0.021611, 0.014053, 0.010010, 0.010104, 0.009589, 0.006359, 0.003576, 0.004069, 0.006521, 0.010767, 0.019143, 0.028684, 0.041898, 0.055607, 0.070624, 0.086285, 0.104201
#*# 	  0.085400, 0.071700, 0.059548, 0.049837, 0.039338, 0.032015, 0.024094, 0.018451, 0.014789, 0.012575, 0.012192, 0.008358, 0.006470, 0.006790, 0.009338, 0.014162, 0.020750, 0.030483, 0.042820, 0.056309, 0.070501, 0.087601, 0.103913
#*# 	  0.088311, 0.073888, 0.060260, 0.050545, 0.041199, 0.033397, 0.025825, 0.020483, 0.016020, 0.014037, 0.014396, 0.010620, 0.007651, 0.008252, 0.011303, 0.016956, 0.022790, 0.030576, 0.042844, 0.056756, 0.071599, 0.087574, 0.103930
#*# 	  0.092419, 0.077216, 0.064473, 0.054505, 0.045243, 0.036507, 0.029348, 0.023902, 0.019590, 0.017778, 0.017166, 0.014156, 0.010870, 0.012516, 0.016276, 0.021385, 0.027744, 0.036419, 0.048257, 0.060304, 0.074734, 0.091926, 0.108686
#*# 	  0.099549, 0.083281, 0.071173, 0.060577, 0.050953, 0.042557, 0.036172, 0.029244, 0.025940, 0.024937, 0.024288, 0.020598, 0.017618, 0.017972, 0.020407, 0.025503, 0.032744, 0.041563, 0.052875, 0.066506, 0.080292, 0.096809, 0.114048
#*# 	  0.103894, 0.090191, 0.077116, 0.067646, 0.057436, 0.049247, 0.043566, 0.037298, 0.034206, 0.032226, 0.031867, 0.027856, 0.024458, 0.024129, 0.027817, 0.031737, 0.039234, 0.047661, 0.059405, 0.072619, 0.088066, 0.104832, 0.120761
#*# 	  0.111168, 0.096914, 0.085362, 0.074237, 0.065017, 0.056866, 0.049481, 0.043823, 0.039537, 0.038504, 0.038083, 0.035082, 0.032419, 0.030706, 0.033977, 0.037555, 0.044398, 0.053721, 0.064103, 0.077070, 0.091626, 0.105885, 0.124237
#*# 	  0.113202, 0.098582, 0.086631, 0.076805, 0.067407, 0.057852, 0.052201, 0.046456, 0.042503, 0.040384, 0.040397, 0.037793, 0.034639, 0.035298, 0.035494, 0.039997, 0.046001, 0.054796, 0.064566, 0.076686, 0.091245, 0.106395, 0.124460
#*# 	  0.111914, 0.098080, 0.083830, 0.073750, 0.064898, 0.056643, 0.049923, 0.045355, 0.041853, 0.040066, 0.040321, 0.036808, 0.034756, 0.034561, 0.035411, 0.038769, 0.044941, 0.053859, 0.063707, 0.076106, 0.089077, 0.104441, 0.119342
#*# x_count = 23
#*# y_count = 23
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 45.043
#*# max_x = 184.95
#*# min_y = 45.085
#*# max_y = 184.951
#*#
#*# [axis_twist_compensation]
#*# z_compensations = -0.013931, 0.023180, -0.009249
#*# compensation_start_x = 20.0
#*# compensation_end_x = 200.0
