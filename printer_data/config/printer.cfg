[respond]
[include chopper_tune.cfg]
#[include cartographer.cfg]
[include ebb36.cfg]
[include shell_command.cfg]
[include mainsail.cfg]
#[include klicky-probe.cfg]
[include macro_rename.cfg]
[include macros.cfg]
[include tmc_autotune.cfg]
[include KAMP_Settings.cfg]
#[include K-ShakeTune/*.cfg]
[include calibrate.cfg]
[include backup.cfg]
[include filament_dryer.cfg]

[save_variables]
filename: /home/pi/printer_data/config/variables.cfg

[auto_speed]

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
# number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 1000
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[scanner]
canbus_uuid: 3f73f5294bf3            # adjust to suit your scanner, if using usb change to serial.
#    serial: /dev/serial/by-id/usb-cartographer_cartographer_
x_offset: 0                          # adjust for your cartographers offset from nozzle to middle of coil
y_offset: 21.1                       # adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.05916               # Backlash compensation distance for removing Z backlash before measuring the sensor response.
calibration_method: touch            # leave this as touch unless you want to use scan only for everything. 
sensor: cartographer                 # this must be set as cartographer unless using IDM etc.
sensor_alt: carto                    # alternate name to call commands. CARTO_TOUCH etc
mesh_runs: 2                         # Number of passes to make during mesh scan.

[idle_timeout]
timeout: 1800                        # Idle time (in seconds) to wait before running the above G-Code

[bed_mesh]
zero_reference_position: 112, 112    # set this to the middle of your bed
speed: 300                           # movement speed of toolhead during bed mesh
horizontal_move_z: 5                 # height of scanner during bed mesh scan
mesh_min: 10,10 
mesh_max: 200,200 
probe_count: 30,30
algorithm: bicubic

[lis2dw]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points: 125, 125, 20

[axis_twist_compensation]
speed: 200
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
calibrate_start_x: 20
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position. This parameter must be provided.
calibrate_end_x: 200
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position. This parameter must be provided.
calibrate_y: 110
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter must be provided and is recommended to
#   be near the center of the bed

[skew_correction] 

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_sam4e8e_003230533750414D3137303535303439-if00
serial: /dev/serial/by-id/usb-Klipper_rp2040_4550357128952208-if00

[gcode_arcs]
resolution: 0.1

[exclude_object]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT


[stepper_x]
# stepper B links
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12
microsteps: 64
#microsteps: 128
full_steps_per_rotation: 200
rotation_distance: 40
endstop_pin: EBB36: PB5
#endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_speed: 120
homing_retract_dist: 0
position_endstop: 230
position_max: 230
position_min: -30

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.8
stealthchop_threshold: 0
#hold_current: 0.6
#stealthchop_threshold: 999999
diag_pin: ^gpio4
driver_SGTHRS: 100

[stepper_y]
# stepper A rechts
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7
microsteps: 64
#microsteps: 128
full_steps_per_rotation: 200
rotation_distance: 40
homing_speed: 80
homing_retract_dist: 0
endstop_pin: gpio3
# tmc2209_stepper_y:virtual_endstop
position_endstop: 245
position_max: 245
position_min: -25

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.8
stealthchop_threshold: 0
#hold_current: 0.6
#stealthchop_threshold: 999999
diag_pin: ^gpio3
driver_SGTHRS: 150

[stepper_z]
# rechts
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0
position_max: 200
position_min: -2
homing_speed: 15

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.6
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z1]
# links
step_pin: gpio14
dir_pin: gpio13
enable_pin: !gpio15
microsteps: 16
rotation_distance: 4

[tmc2209 stepper_z1]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.6
hold_current: 0.500
stealthchop_threshold: 999999

[z_tilt]
z_positions:
  275,110  # rechts
  -55,110 # links
points:
   10,115
   210,115
speed: 200
horizontal_move_z: 5
retries: 3
retry_tolerance: 0.01

# [probe]
# pin: EBBCan:PB6
# x_offset: 0
# y_offset: 32
# speed: 5
# samples: 3
# samples_result: median
# sample_retract_dist: 2
# samples_tolerance: 0.01
# samples_tolerance_retries: 5

[safe_z_home]
home_xy_position: 110,110
z_hop: 5

#[bed_mesh]
#speed: 300
#horizontal_move_z: 5
#mesh_min: 10,10 
#mesh_max: 200, 200 
#probe_count: 10, 10
#algorithm: bicubic

[heater_bed]
heater_pin: gpio21
pwm_cycle_time: 0.02
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26
min_temp: 0
max_temp: 130
control = pid
pid_kp = 53.887
pid_ki = 2.548
pid_kd = 284.925

[controller_fan fet_cooling]
pin: gpio17
max_power: 1.0
fan_speed: 1
cycle_time: 0.01
kick_start_time: 0
stepper: stepper_x

[fan_generic filter]
pin: gpio20
cycle_time: 0.01
hardware_pwm: true

#[fan_generic controller_fan]
#pin: gpio17

[printer]
kinematics: corexy
max_velocity: 700
max_accel: 10000
max_z_velocity: 15
max_z_accel: 30

[screws_tilt_adjust]
screw1: 36, -18
screw1_name: front left screw

screw2: 206, -18
screw2_name: front right screw

screw3: 206, 150
screw3_name: rear right screw

screw4: 36, 150
screw4_name: rear left screw
horizontal_move_z: 5
speed: 200
screw_thread: CW-M4

[temperature_sensor pico]
sensor_type: temperature_mcu

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [scanner model default]
#*# model_coef = 1.3493498202903655,
#*# 	1.7866262163593043,
#*# 	0.761752794255524,
#*# 	0.08608737855767203,
#*# 	0.4635713859037924,
#*# 	1.5264760904773342,
#*# 	-0.5105263801603798,
#*# 	-2.065766250005725,
#*# 	0.48322072939840416,
#*# 	1.1155337136499237
#*# model_domain = 3.1839359823232537e-07,3.347973369217271e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 24.926280
#*# model_offset = 0.00000
#*#
#*# [scanner]
#*# scanner_touch_threshold = 4000
#*# scanner_touch_z_offset = 0.220
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.005718, -0.016944, -0.016560, -0.020435, -0.027491, -0.032304, -0.036610, -0.037426, -0.037265, -0.035028, -0.033553
#*# 	  -0.004677, -0.011457, -0.015315, -0.020353, -0.025005, -0.029950, -0.032353, -0.032287, -0.033379, -0.032235, -0.031677
#*# 	  -0.006327, -0.014552, -0.021023, -0.021760, -0.025142, -0.028741, -0.031692, -0.035285, -0.033072, -0.030990, -0.028690
#*# 	  -0.007174, -0.013887, -0.018062, -0.020963, -0.023520, -0.029162, -0.033729, -0.035452, -0.032507, -0.030024, -0.022864
#*# 	  -0.002019, -0.010240, -0.015369, -0.019859, -0.021378, -0.026632, -0.030774, -0.031263, -0.027471, -0.022815, -0.019312
#*# 	  0.004781, -0.002219, -0.007792, -0.010777, -0.012543, -0.017919, -0.021234, -0.020987, -0.017282, -0.013724, -0.007284
#*# 	  0.012702, 0.004377, -0.001656, -0.004148, -0.003121, -0.009032, -0.012125, -0.013329, -0.011101, -0.006313, -0.001842
#*# 	  0.015799, 0.010149, 0.006270, 0.003945, 0.002816, -0.001931, -0.005904, -0.007177, -0.005397, -0.002159, 0.003821
#*# 	  0.015229, 0.009440, 0.006775, 0.006478, 0.004851, -0.000430, -0.004010, -0.004304, -0.002405, 0.000963, 0.007150
#*# 	  0.014690, 0.008747, 0.004492, 0.003880, 0.003540, -0.000129, -0.003739, -0.002783, -0.001881, 0.002187, 0.007854
#*# 	  0.016410, 0.010718, 0.007649, 0.005523, 0.005485, 0.002781, -0.000004, -0.000516, 0.000948, 0.003989, 0.009690
#*# 	  0.020349, 0.014628, 0.011647, 0.011196, 0.011152, 0.008363, 0.006147, 0.005923, 0.007782, 0.011288, 0.015992
#*# 	  0.030842, 0.025590, 0.023038, 0.023171, 0.022952, 0.019304, 0.016851, 0.017616, 0.018504, 0.021830, 0.027285
#*# 	  0.041629, 0.036055, 0.033315, 0.032597, 0.033136, 0.029283, 0.026492, 0.026002, 0.027647, 0.029864, 0.036213
#*# 	  0.044745, 0.040975, 0.037571, 0.036326, 0.035789, 0.031857, 0.030193, 0.030245, 0.032014, 0.034685, 0.039988
#*# 	  0.049556, 0.045094, 0.042235, 0.041576, 0.042458, 0.038927, 0.036368, 0.036151, 0.038451, 0.042525, 0.046674
#*# 	  0.055592, 0.051316, 0.048566, 0.048182, 0.048469, 0.045619, 0.042979, 0.043885, 0.044868, 0.049316, 0.054275
#*# 	  0.064531, 0.059909, 0.056717, 0.057004, 0.057856, 0.054342, 0.051298, 0.051024, 0.054290, 0.056718, 0.062063
#*# 	  0.072934, 0.069469, 0.066702, 0.064772, 0.064988, 0.063162, 0.059931, 0.059923, 0.060895, 0.064198, 0.069612
#*# 	  0.078623, 0.074322, 0.071673, 0.072614, 0.073002, 0.070305, 0.067359, 0.065842, 0.068126, 0.070908, 0.075189
#*# x_count = 11
#*# y_count = 20
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 84.3
#*# max_x = 145.7
#*# min_y = 53.803
#*# max_y = 176.2
#*#
#*# [axis_twist_compensation]
#*# z_compensations = -0.013931, 0.023180, -0.009249
#*# compensation_start_x = 20.0
#*# compensation_end_x = 200.0
